steps:
# Dockerfileを利用してアプリのテストビルドとイメージのビルドを行う。$_VERSIONはトリガーの変数として設定します。
# $PROJECT_IDには使用中のプロジェクトIDが自動的に挿入されます
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-f', 'Dockerfile', '--tag=gcr.io/$PROJECT_ID/cb-sample-server:$_VERSION', '.']
# 作成したcb-sample-serverイメージをPUSHする
- name: 'gcr.io/cloud-builders/docker'
  args: ["push", "gcr.io/$PROJECT_ID/cb-sample-server:$_VERSION"]
# Clusterを取得。$_ZONEはトリガーの変数として設定します。
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - beta
  - container
  - clusters
  - get-credentials
  - cb-sample-server
  - --zone=$_ZONE
  - --project=$PROJECT_ID
# アプリのデプロイ設定
- name: 'gcr.io/cloud-builders/kubectl:latest'
  args:
  - 'apply'
  - '--filename=deployment.yaml'
  env:
  - "CLOUDSDK_COMPUTE_REGION=asia-northeast1-a"
  - "CLOUDSDK_COMPUTE_ZONE=asia-northeast1-a"
  - "CLOUDSDK_CONTAINER_CLUSTER=cb-sample-server"
# NodePortのサービスを登録する 30580->8080
- name: 'gcr.io/cloud-builders/kubectl:latest'
  args:
  - 'apply'
  - '--filename=service.yaml'
  env:
  - "CLOUDSDK_COMPUTE_REGION=asia-northeast1-a"
  - "CLOUDSDK_COMPUTE_ZONE=asia-northeast1-a"
  - "CLOUDSDK_CONTAINER_CLUSTER=cb-sample-server"
# イメージをDeploymentにセットする。
- name: 'gcr.io/cloud-builders/kubectl:latest'
  args:
  - 'set'
  - 'image'
  - 'deployment/cb-sample-server'
  - 'cb-sample-server=gcr.io/$PROJECT_ID/cb-sample-server:$_VERSION'
  env:
  - "CLOUDSDK_COMPUTE_REGION=asia-northeast1-a"
  - "CLOUDSDK_COMPUTE_ZONE=asia-northeast1-a"
  - "CLOUDSDK_CONTAINER_CLUSTER=cb-sample-server"
# デプロイのステータス確認
- name: 'gcr.io/cloud-builders/kubectl:latest'
  args:
  - 'rollout'
  - 'status'
  - 'deployment/cb-sample-server'
  env:
  - "CLOUDSDK_COMPUTE_REGION=asia-northeast1-a"
  - "CLOUDSDK_COMPUTE_ZONE=asia-northeast1-a"
  - "CLOUDSDK_CONTAINER_CLUSTER=cb-sample-server"

- id: policy-test
  name: instrumenta/conftest:${_CONFTEST_VERSION}
  entrypoint: '/bin/sh'
  args: [ '-c', "conftest test --no-color --combine --output=stdout --policy .conftest/sample.rego *.yaml" ]
  # waitFor: [ 'policy-parse' ]
  timeout: 60s